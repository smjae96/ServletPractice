/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-03-08 02:43:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.pizza;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import java.util.Date;
import java.text.SimpleDateFormat;

public final class orderForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Pizza Order</title>\r\n");
      out.write("<style>\r\n");
      out.write("	fieldset {\r\n");
      out.write("		width: 40%;\r\n");
      out.write("	}\r\n");
      out.write("	.info {\r\n");
      out.write("		display: flex;\r\n");
      out.write("	}\r\n");
      out.write("	label {\r\n");
      out.write("		width: 20%;\r\n");
      out.write("	}\r\n");
      out.write("	textarea {\r\n");
      out.write("		width: 80%\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h1>피자 주문하기</h1>\r\n");
      out.write("<h2>현재 날짜</h2>\r\n");
      out.write("<h3>");
 Date d = new Date();
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy년 MM월 dd일");
		String today = sdf.format(d);
		out.println(today);
	
      out.write("</h3>\r\n");
      out.write("\r\n");
      out.write("<form action=\"/2_JSP/orderPizza.do\" method=\"GET\">\r\n");
      out.write("	\r\n");
      out.write("	<fieldset>\r\n");
      out.write("		<legend>주문자 정보</legend>\r\n");
      out.write("		<div class=\"info\">\r\n");
      out.write("		<label>이름</label>\r\n");
      out.write("		<input type=\"text\" name=\"name\" required>\r\n");
      out.write("		</div>\r\n");
      out.write("		<br>\r\n");
      out.write("		<div class=\"info\">\r\n");
      out.write("		<label>연락처</label>\r\n");
      out.write("		<input type=\"text\" name=\"phone\" required>\r\n");
      out.write("		</div>\r\n");
      out.write("		<br>\r\n");
      out.write("		<div class=\"info\">\r\n");
      out.write("		<label>주소</label>\r\n");
      out.write("		<input type=\"text\" name=\"address\" required>\r\n");
      out.write("		</div>\r\n");
      out.write("		<br>\r\n");
      out.write("		<div style=\"display: flex;\">\r\n");
      out.write("		<label>요청사항</label>\r\n");
      out.write("		<textarea rows=10 placeholder=\"내용을 입력하세요.\" name=\"requestion\"></textarea>\r\n");
      out.write("		</div>\r\n");
      out.write("	</fieldset>\r\n");
      out.write("	\r\n");
      out.write("	<fieldset>\r\n");
      out.write("		<legend>주문 정보</legend>\r\n");
      out.write("		<label>피자</label>\r\n");
      out.write("		<select name=\"menu\">\r\n");
      out.write("			<option value=\"콤비네이션피자\">콤비네이션 피자</option>\r\n");
      out.write("			<option value=\"치즈피자\">치즈 피자</option>\r\n");
      out.write("			<option value=\"불고기피자\">불고기 피자</option>\r\n");
      out.write("			<option value=\"포테이토피자\">포테이토 피자</option>\r\n");
      out.write("			<option value=\"하와이안피자\">하와이안 피자</option>\r\n");
      out.write("		</select>\r\n");
      out.write("		<br>\r\n");
      out.write("		<label>토핑</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" value=\"치즈\">\r\n");
      out.write("		<label>치즈</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" value=\"올리브\">\r\n");
      out.write("		<label>올리브</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" value=\"불고기\">\r\n");
      out.write("		<label>불고기</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" value=\"치즈 크러스트\">\r\n");
      out.write("		<label>치즈 크러스트</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" value=\"버섯\">\r\n");
      out.write("		<label>버섯</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" value=\"파인애플\">\r\n");
      out.write("		<label>파인애플</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" value=\"베이컨\">\r\n");
      out.write("		<label>베이컨</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" value=\"포테이토\">\r\n");
      out.write("		<label>포테이토</label>\r\n");
      out.write("		<br>\r\n");
      out.write("		<label>사이드</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" value=\"피클\">\r\n");
      out.write("		<label>피클</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" value=\"사이다\">\r\n");
      out.write("		<label>사이다</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" value=\"콜라\">\r\n");
      out.write("		<label>콜라</label>\r\n");
      out.write("	</fieldset>\r\n");
      out.write("	<br>\r\n");
      out.write("	<input type=\"submit\" value=\"주문\">\r\n");
      out.write("	<input type=\"reset\" value=\"초기화\">\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
